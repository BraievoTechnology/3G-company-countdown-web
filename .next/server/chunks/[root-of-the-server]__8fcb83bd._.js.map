{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/lahiruileperumage/Desktop/company-folder/projects/3gconsultants/final/first/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\n\nconst globalForPrisma = globalThis as unknown as {\n    prisma: PrismaClient | undefined;\n};\n\nexport const prisma =\n    globalForPrisma.prisma ??\n    new PrismaClient({\n        log: ['query'],\n    });\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SACT,gBAAgB,MAAM,IACtB,IAAI,6HAAA,CAAA,eAAY,CAAC;IACb,KAAK;QAAC;KAAQ;AAClB;AAEJ,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///Users/lahiruileperumage/Desktop/company-folder/projects/3gconsultants/final/first/src/app/api/user/signIn/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { prisma } from '@/lib/prisma';\nimport argon2 from 'argon2';\n\nexport async function POST(req: NextRequest) {\n    try {\n        const body = await req.json();\n        const { userName, password } = body;\n\n        if (!userName || !password) {\n            return NextResponse.json({ error: 'Missing username or password' }, { status: 400 });\n        }\n\n        const user = await prisma.user.findUnique({\n            where: { userName },\n        });\n\n        // Validate user and compare password using argon2\n        if (!user || !(await argon2.verify(user.password, password))) {\n            return NextResponse.json({ error: 'Invalid credentials' }, { status: 401 });\n        }\n\n        const response = NextResponse.json({\n            message: 'Signed in',\n            user: { id: user.id, userName: user.userName }\n        });\n\n        // Set cookie\n        response.cookies.set('admin-auth', 'true', {\n            httpOnly: true,\n            secure: process.env.NODE_ENV === 'production',\n            sameSite: 'strict',\n            path: '/',\n            maxAge: 60 * 60,\n        });\n\n        return response;\n    } catch (error) {\n        console.error('Signin error:', error);\n        return NextResponse.json({ error: 'Internal server error' }, { status: 500 });\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,GAAgB;IACvC,IAAI;QACA,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG;QAE/B,IAAI,CAAC,YAAY,CAAC,UAAU;YACxB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA+B,GAAG;gBAAE,QAAQ;YAAI;QACtF;QAEA,MAAM,OAAO,MAAM,sHAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YACtC,OAAO;gBAAE;YAAS;QACtB;QAEA,kDAAkD;QAClD,IAAI,CAAC,QAAQ,CAAE,MAAM,qGAAA,CAAA,UAAM,CAAC,MAAM,CAAC,KAAK,QAAQ,EAAE,WAAY;YAC1D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAsB,GAAG;gBAAE,QAAQ;YAAI;QAC7E;QAEA,MAAM,WAAW,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAC/B,SAAS;YACT,MAAM;gBAAE,IAAI,KAAK,EAAE;gBAAE,UAAU,KAAK,QAAQ;YAAC;QACjD;QAEA,aAAa;QACb,SAAS,OAAO,CAAC,GAAG,CAAC,cAAc,QAAQ;YACvC,UAAU;YACV,QAAQ,oDAAyB;YACjC,UAAU;YACV,MAAM;YACN,QAAQ,KAAK;QACjB;QAEA,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC/E;AACJ","debugId":null}}]
}